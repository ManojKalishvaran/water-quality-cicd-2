name: water-quality-cicd-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  trainingImageName: 'water-quality-training'
  inferenceImageName: 'water-quality-inference'
  tag: 'latest'

stages:
- stage: Build
  displayName: 'Build & Push Docker Images'
  jobs:
  - job: BuildTrainingImage
    displayName: 'Training Docker Image - Building'
    steps:
    - checkout: self
    - task: Docker@2
      displayName: 'Build & Push Training Image to ACR'
      inputs:
        containerRegistry: 'acr-connection' 
        repository: '$(trainingImageName)'
        command: 'buildAndPush'
        Dockerfile: '**/Training/Dockerfile'
        tags: |
          $(tag)

  - job: BuildInferenceImage
    displayName: 'Inference Docker Image - Building'
    dependsOn: BuildTrainingImage
    steps:
    - checkout: self
    - task: Docker@2
      displayName: 'Build & Push Inference Image to ACR'
      inputs:
        containerRegistry: 'acr-connection'  
        repository: '$(inferenceImageName)'
        command: 'buildAndPush'
        Dockerfile: '**/inference/Dockerfile'
        tags: |
          $(tag)

- stage: Deploy
  displayName: 'Deploy Inference Container to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployInference
    displayName: 'Deploy Inference Container'
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Deploy Inference Container to App Service'
      inputs:
        azureSubscription: 'az-sub'   
        appName: 'water-quality-api'        
        containers: 'manojacrregistry.azurecr.io/$(inferenceImageName):$(tag)'  
